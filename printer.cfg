## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10


## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9


## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8


## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4


## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1


## HE1                2.4
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE			  0.10
##===================================================================

[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#(BROKEN)serial: /dev/serial/by-id/usb-Klipper_lpc1768_0440000D881C4AAFA796685DC32000F5-if00
#(BROKEN)serial: /dev/serial/by-id/usb-Klipper_lpc1769_1A80011605A5D79572874662C52000F5-if00
serial: /dev/serial/by-id/usb-Klipper_lpc1769_2810011505A5D795897A4662C52000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_10200001881C4AAFE65D685DC22000F5-if00
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 400
max_accel: 9000    			#Max 7000, default 3000
max_accel_to_decel: 9000
max_z_velocity: 30 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350   			#Max ?
square_corner_velocity: 5.0  #Can experiment with 8.0, default 5.0

#####################################################################
# 	Stepper Settings
#####################################################################
[include stepper.cfg]

#####################################################################
# 	Extruder
#####################################################################
[include extruder.cfg]

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
sensor_type: Generic 3950
sensor_pin: z:P0.25
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Exclude object
#   Enables support to exclude or cancel individual objects during the printing process.
#####################################################################

[exclude_object]

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Z_MAX on mcu_z
##	If your probe is NO instead of NC, add change pin to !z:P0.10
pin: ^z:P0.10
#pin: !z:P0.10
x_offset: 0
y_offset: 20
#z_offset: 7.86 # Klicky as Endstop
speed: 5 # default: 10.0
lift_speed: 10.0
samples: 3
samples_result: median # default: average
sample_retract_dist: 1.0
samples_tolerance: 0.0075
samples_tolerance_retries: 12

#####################################################################
# 	Mesh
#   For diagnostics
#####################################################################

[bed_mesh]
speed: 280
horizontal_move_z: 10
mesh_min: 25,25
mesh_max: 275,275
probe_count: 5,5
#zero_reference_position: 212.5, 275
zero_reference_position: 150, 150 # Klicky as Endstop
fade_start: 0.5
fade_end: 10.0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2


#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - XYE board, Fan Pin
pin: P2.3
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.35 # quiet mode

#[heater_fan exhaust_fan]
##	Exhaust fan - Z board, HE0 Connector
#pin: z:P2.7
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - Bed Connector (Optional)
#pin: P2.5
#pwm:true
#shutdown_value: 0
#value:100
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

# [safe_z_home]
# home_xy_position: 203.70, 303.90
#   A X,Y coordinate (e.g. 100,100) where the Z homing should be
#   performed. This parameter must be provided.
# speed: 150
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
# z_hop: 5.0
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed, then prior to any XY homing
#   movement the Z axis boundary checks are disabled and the head is
#   lifted by z_hop. If z_hop is specified, be sure to home the Z
#   immediately after any XY home requests so that the Z boundary
#   checks are accurate. The default is to not implement Z hop.
# z_hop_speed: 600.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 20mm/s.
# move_to_previous: False
#   When set to True, xy are reset to their previous positions after z
#   homing. The default is False.

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25

##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
gantry_corners:
	-60,-10
	360,370
##	Probe points
points:
	50,25
	50,225
	250,225
	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
#gantry_corners:
#	-60,-10
#	410,420
##	Probe points
#points:
#	50,25
#	50,275
#	300,275
#	300,25

#--------------------------------------------------------------------
speed: 300 # default: 100
horizontal_move_z: 20 # default: 10
retries: 10
retry_tolerance: 0.01
max_adjust: 15

#####################################################################
#   Respond / M118
#####################################################################

[respond]
default_type: echo

#####################################################################
#   Filament sensor
#####################################################################

[filament_switch_sensor filament]
pause_on_runout: True
switch_pin: !P1.26
runout_gcode:
    SET_IDLE_TIMEOUT TIMEOUT=172800  ; 48h
    M118 =========================
    M118 Filament runout detected
    M118 =========================
    M118 Warning! Idle timeout
    M118 will be reached in 48h
    #M600

#####################################################################
#  Skew correction
#####################################################################
[skew_correction]
# 20210226
# SET_SKEW XY=140.52,140.75,99.52

# 20220314
# xy_skew = 0.00461964085577
# xz_skew = 0.0
# yz_skew = 0.0

# 20230821
# xy_skew = -0.0045364741291
# xz_skew = 0.0
# yz_skew = 0.0

#####################################################################
#  Resonance tester
#####################################################################
# command: SHAPER_CALIBRATE
#[include resonance_tester.cfg]

#####################################################################
# Input Shaper
#####################################################################
[include input_shaper.cfg]

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have. Display connects to Z MCU
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#menu_timeout: 40
#encoder_pins: ^z:P3.26, ^z:P3.25
#click_pin: ^!z:P0.28

#[output_pin beeper]
#pin: z:P1.30

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
encoder_pins: ^z:P3.25,^z:P3.26
click_pin: ^!z:P0.28
contrast: 63
display_group: __voron_display

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: z:P1.21
chain_count: 3
# Color: #79E425
initial_RED: 0.91
initial_GREEN: 0.87
initial_BLUE: 0.01
color_order: RGB

#	Set RGB values on boot up for each Neopixel.
#	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        #SET_LED LED=fysetc_mini12864 RED=1 GREEN=0.1 BLUE=0 INDEX=1 TRANSMIT=0
        #SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0.125 GREEN=0.125 BLUE=0.125 INDEX=3 TRANSMIT=1

#--------------------------------------------------------------------

[display_glyph voron]
data:
 ......***.......
 ....*******.....
 ...*********....
 .*************..
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 **..***..******.
 ******..***..**.
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 .*************..
 ...*********....
 ....*******.....
 ......***.......

[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display progress_text]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { "{:^6.0%}".format(progress) }

[display_data __voron_display progress_text2]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

#########################################################
# This section defines the actual chamber temp. field,
# replace 'temperature_sensor chamber' as necessary
#########################################################
[display_data __voron_display chamber]
position: 2, 0
text:
  {% set chamber = printer['temperature_fan chamber'] %}
  ~chamber~
  { "%3.0f" % (chamber.temperature,) }
  ~degrees~

[display_data __voron_display print_status]
position: 3, 0
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    { "V2.1005 " }
  ~voron~
  {% endif %}

##### menu limits
[include printer_menu.cfg]
#####

#####################################################################
# 	chamber temp
#####################################################################

[temperature_fan chamber]
# Exhaust/Chamber fan - Z board, HE1 Connector
pin: z:P2.7
max_power: 1.0
max_speed: 1.00
min_speed: 0.015
off_below: 0.02
shutdown_speed: 1.0
kick_start_time: 1.0
# Chamber Thermistor
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.23
min_temp: 0
max_temp: 70.0
target_temp: 60.0   ; Activate Exhaust fan at this temperature
#control: watermark
control: pid
pid_kp: 40
pid_ki: 2
pid_kd: 200

gcode_id: C

[display_glyph chamber]
data:
  ................
  ****************
  *....*....*....*
  *....*....*....*
  *....******....*
  *..............*
  *..............*
  *.....****.....*
  *.***.*..*.***.*
  *.....****.....*
  *......**......*
  *..............*
  *.************.*
  *...*......*...*
  ****************
  ................


#####################################################################
#   RPI temp
#####################################################################

[temperature_sensor RPi]
sensor_type: temperature_host

#####################################################################
# 	Caselight
#####################################################################

# [output_pin caselight]
# pin: z:P2.5
# pwm: True
# shutdown_value: 0
# value: 0.5
# cycle_time: 0.01
# hardware_pwm: False

#####################################################################
# Support for gcode arc
#####################################################################
[gcode_arcs]
resolution: 0.05
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

#####################################################################
# 	Mainsail / Fluidd
#####################################################################

[include client.cfg]

#####################################################################
#   Idle timeout
#####################################################################

[idle_timeout]
gcode:
    TURN_OFF_HEATERS
    M84
timeout: 14400


#####################################################################
# 	Mods
#####################################################################
[include klicky-probe.cfg]

[include nevermore.cfg]

#####################################################################
# 	Macros
#####################################################################


# [gcode_macro M204]
# rename_existing:            M204.1
# gcode:
#   # Parameter
#     {% set S = params.S|default(-1)|float %}
#     {% set F = params.F|default(0.75)|float %}

#   # Script
#     {% if S != -1 %} # TODO is this in spec?
#         SET_VELOCITY_LIMIT ACCEL={ S } ACCEL_TO_DECEL={ S|float * F }
#     {% endif %}
# [gcode_macro M205]
# gcode:
#     {% if 'X' in params %}
#         SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ X }
#     {% endif %}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    # default: G0 X150 Y150 Z20 F6000
    G0 X150 Y150 Z10 F10000
    
    
[gcode_macro lights_off]
gcode:
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=3 TRANSMIT=1

[gcode_macro lights_on]
gcode:
        SET_LED LED=fysetc_mini12864 RED=0.910 GREEN=0.910 BLUE=0.010 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0.910 GREEN=0.910 BLUE=0.010 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0.125 GREEN=0.125 BLUE=0.125 INDEX=3 TRANSMIT=1

[gcode_macro prime_nozzle]
gcode:
    {% set x_offset = params.X_OFFSET|default(2)|int %}

    ;Set up for intro line
    G92 E0.0
    G1 Z5 F1800
    G1 X{x_offset} Y10 F9000
    #G1 Z0.28 F600
    G1 Z0.35 F600

    ;Begin printing intro line
    G1 Y190 E15.0 F2400 #F1500.0 ; intro line
    G1 X{x_offset}.6 F5000  ; move over
    G1 Y10 E15 F2000 #F1200.0 ; intro line

    ; Reset E
    G92 E0.0

[gcode_macro clean_nozzle]
# X 105.00 Y 304.00
gcode:
	MOVE_TO_WIPER
	{% for wipe in range(10) %}
		{% for coordinate in [(105,304),(45,304)] %}
			G0 X{coordinate[0]} Y{coordinate[1] - 0.25 * wipe} Z2 F18000
		{% endfor %}
	{% endfor %}
	G0 Z10

[gcode_macro move_to_wiper]
gcode:
	G0 X110 Y304 F18000
	G0 Z2

[gcode_macro move_to_camera]
# X 205.00 Y 300.00 Z 30.00
gcode:
	G0 X205 Y300 Z 30 F18000

[gcode_macro move_to_center]
# X 205.00 Y 300.00 Z 30.00
gcode:
	G0 X150 Y150 Z 150 F18000

[gcode_macro move_to_filamentchange]
# X 205.00 Y 300.00 Z 30.00
gcode:
	G0 X150 Y50 Z 150 F18000
	
[gcode_macro move_to_core_change]
# X 205.00 Y 300.00 Z 30.00
gcode:
	G0 X150 Y0 Z 240 F18000

[gcode_macro PRINT_START]
# In Cura: print_start EXTRUDER={material_print_temperature_layer_0} BED={material_bed_temperature_layer_0}
# In SuSl: print_start EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature] HEATSOAK_TIME=60 HEATSOAK_FORCE=0
gcode:
  # Parameter
  {% set extruder_target_c = params.EXTRUDER|default(60)|int %}
  {% set bed_target_c = params.BED|default(105)|int %}
  {% set chamber_target_c = params.CHAMBER|default(60)|int %}
  {% set chamber_heatsoak_target_c = params.CHAMBER_HEATSOAK|default(43)|int %}
  {% set heatsoak_time = params.HEATSOAK_TIME|default(60)|int %}
  {% set heatsoak_force = params.HEATSOAK_FORCE|default(0)|int %}
  {% set chamber_fan = printer['temperature_fan chamber'] %}

  # Script
    M141 S{chamber_target_c}          ; chamber to 60 deg C max
    BED_MESH_CLEAR    ; remove any bed mesh
    M117 Preparing print
    G28
    G0 Z90 F7000
    G0 X150 Y150 F18000
    M190 S{bed_target_c}
	
    # preheat
#    {% if heatsoak_force == 1 or bed_target_c >= 90 and chamber_fan.temperature|int <= 42 %}
#      heatsoak_move BED={bed_target_c} EXTRUDER=60 HEATSOAK_TIME={heatsoak_time}
#    {% endif %}
    {% if bed_target_c >= 90 %}
    NEVERMORE_ON
    heatsoak_smart EXTRUDER=60 BED={bed_target_c} HEATSOAK_TEMP={chamber_heatsoak_target_c}
    {% endif %}

    M117 QGL
    QUAD_GANTRY_LEVEL
    #G28 Z # Klicky as Endstop
    #M117 Bedmesh
    BED_MESH_CALIBRATE
    #BED_MESH_PROFILE LOAD=mesh20201214_23

    SKEW_PROFILE LOAD=default

    M117 Wipe
    MOVE_TO_WIPER
    M109 S{extruder_target_c}

    # deretract from prev. print
    G1 E30 F480
    # clean
    clean_nozzle

    # reset fan
    M106 S0
    # reset extruder
    G92 E0
    
    #G28 Z # Klicky as Endstop
    prime_nozzle

    # load skew
    SKEW_PROFILE LOAD=default

    M117 Printing


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
  # Parameter
    {% set bed_target_c = params.BED|default(60)|int %}

  # Script
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-30 F3600                  ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X2.0 Y2.0 F20000      ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F7000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X150 Y301 F18000           ; park nozzle at rear

    # Move nozzle up, clearing print for access
    {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 50 %}
      G91
      G0 Z50 F18000
      G90
    {% endif %}


    #SET_FAN_SPEED FAN=exhaust_fan SPEED=0.8
    M141 S60                       ; set chamber temp low to activate fan

    SET_SKEW CLEAR=1
    BED_MESH_CLEAR

    # Turn on bed again, so no preheat for next print needed. Adjust idle timeout.
    #SET_IDLE_TIMEOUT TIMEOUT=1800  ; 30 min
    SET_IDLE_TIMEOUT TIMEOUT=600  ; 10 min
    M190 S{bed_target_c}
  
    # Run Nevermore for 10 more minutes
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=600

[gcode_macro conditional_turn_off_heaters]
variable_condition: 1
gcode:
	{% if condition|int == 1 %}
		M104 S0
		M140 S0
	{% endif %}

[gcode_macro set_turn_off]
gcode:
	SET_GCODE_VARIABLE MACRO=conditional_turn_off_heaters VARIABLE=condition VALUE={params.CONDITION|default(1)|int}

[gcode_macro heatsoak]
gcode:
  # Parameter
    {% set extruder_target = params.EXTRUDER|default(60)|int %}
    {% set bed_target = params.BED|default(110)|int %}
  
  # Script
    SET_IDLE_TIMEOUT TIMEOUT=20000
    M140 S{bed_target}
    M104 S{extruder_target}


[gcode_macro heatsoak_smart]
gcode:
  # Parameter
    {% set extruder_target_c = params.EXTRUDER|default(60)|int %}
    {% set bed_target_c = params.BED|default(105)|int %}
    {% set heatsoak_temp_min = params.HEATSOAK_TEMP|default(43)|int %}
  # Script
    M140 S{bed_target_c}
    M104 S{extruder_target_c}
    M106 S255 ; Fan on

    M117 Wait chatmp >{heatsoak_temp_min}c
    RESPOND TYPE=command MSG='Wait: chamber >{heatsoak_temp_min}c'
    move_to_center
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={heatsoak_temp_min * 0.75}
	  G0 X150 Y75 Z20 F18000
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={heatsoak_temp_min}
    RESPOND TYPE=command MSG='Wait: reached'
    M117 reached

    M106 S0 ; Fan off


[gcode_macro heatsoak_move]
gcode:
  # Parameter
    {% set extruder_target_c = params.EXTRUDER|default(60)|int %}
    {% set bed_target_c = params.BED|default(105)|int %}
    {% set heatsoak_time_min = params.HEATSOAK_TIME|default(60)|int %}

  # Script
    SET_IDLE_TIMEOUT TIMEOUT=20000
    
    M117 Wipe
    MOVE_TO_WIPER
	
    M140 S{bed_target_c}
    M104 S{extruder_target_c}
    
    clean_nozzle

    G32
    
    G0 Z50 F3000
    G0 X200 Y200 Z50 F3000
    M106 S255 ; Fan on
    # 1 circle is 1 min => 60 is 1h
    # speed is 2pi * r * 1/5
    {% if heatsoak_time_min %} 
    RESPOND MSG="Start heatsoak"
      {% for wipe in range(heatsoak_time_min) %} 
          RESPOND MSG="{heatsoak_time_min - wipe} min left"
          G3 X200 Y150 I-50 J0 F{314.16}
          #{% for coordinate in [(20,20),(280,280)] %}
            #G0 X{coordinate[0]} Y{coordinate[1]} Z2 F3000
          #{% endfor %}
      {% endfor %}
    RESPOND MSG="Stop heatsoak"
    {% endif %}

    move_to_center
    M106 S0 ; Fan off

# Set chamber temp macro (OctoPrint)

[gcode_macro M141]
# M141 - Set Chamber Temperature
gcode:
  # Parameter
    {% set S = params.S|default(0)|int %}

  # Script
  	SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={S}

[gcode_macro M600]
# M600 - Filament Change
gcode:
  # Parameter
    {% set X = params.X|default(175)|int %}
    {% set Y = params.Y|default(10)|int %}
    {% set Z = params.Z|default(20)|int %}

  # Script
    SAVE_GCODE_STATE NAME=ADVANCEDPAUSE
    PAUSE
    G91
    G1 Z{Z} F900
    G90
    G1 X{X} Y{Y} F18000
    RESTORE_GCODE_STATE NAME=ADVANCEDPAUSE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
    G1 E-30 F3600                  ; retract filament
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E30 F480                  ; deretract filament
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


## Ajust z-Offset relative to bed temp
[gcode_macro TEMPADJUSTOFFSET]
gcode:
  # Parameter
    {% set z_offset_abs_mm = 0|float %}  # edit to your filament settings
    {% set z_offset_petg_mm = -0.025|float %} # edit to your filament settings
    {% set z_offset_pla_mm = -0.05|float %}  # edit to your filament settings

  # Script
    #ABS
    {% if printer.heater_bed.target >= 100 %}
        SET_GCODE_OFFSET Z=0 MOVE=1
        SET_GCODE_OFFSET Z_ADJUST=z_offset_abs_mm MOVE=1
    {% endif %}
    #PETG
    {% if printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
        SET_GCODE_OFFSET Z=0 MOVE=1
        SET_GCODE_OFFSET Z_ADJUST=z_offset_petg_mm MOVE=1
    {% endif %}
    #PLA
    {% if printer.heater_bed.target <= 65 %}
        SET_GCODE_OFFSET Z=0 MOVE=1
        SET_GCODE_OFFSET Z_ADJUST=z_offset_pla_mm MOVE=1
    {% endif %}

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 41.572
#*# pid_ki = 1.952
#*# pid_kd = 221.367
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.511
#*# pid_ki = 2.260
#*# pid_kd = 102.975
#*#
#*# [input_shaper]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.180000, 0.092500, 0.035000, 0.077500, 0.185000
#*# 	  0.117500, 0.035000, -0.010000, 0.035000, 0.122500
#*# 	  0.120000, 0.025000, 0.000000, 0.027500, 0.087500
#*# 	  0.157500, 0.037500, -0.012500, 0.020000, 0.077500
#*# 	  0.190000, 0.100000, 0.047500, 0.087500, 0.162500
#*# tension = 0.2
#*# min_x = 25.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 5
#*# max_y = 275.0
#*# mesh_x_pps = 2
#*# max_x = 275.0
#*#
#*# [skew_correction default]
#*# xy_skew = 0.00298275071232
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [probe]
#*# z_offset = 7.980
